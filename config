# This is deliberately bare bones. TO get a better version. rename this file and then: 
# $ starcluster help
# it will autogenerate a more full featured config for you

####################################
## StarCluster Configuration File ##
####################################
[global]
DEFAULT_TEMPLATE=smallcluster


#############################################
## AWS Credentials and Connection Settings ##
#############################################
[aws info]
AWS_ACCESS_KEY_ID = CHANGE THIS TO YOUR KEY ID
AWS_SECRET_ACCESS_KEY = CHANGE THIS TO YOUR SECRET 
AWS_USER_ID= CHANGE THIS TO YOUR USER ID
AWS_REGION_NAME = us-east-1
AWS_REGION_HOST = ec2.us-east-1.amazonaws.com

###########################
## Defining EC2 Keypairs ##
###########################
[key tcbook]
KEY_LOCATION=~/.ssh/yourkey.pem

# You can of course have multiple keypair sections
# [key myotherkey]
# KEY_LOCATION=~/.ssh/myotherkey.rsa

################################
## Defining Cluster Templates ##
################################
# Sections starting with "cluster" represent a cluster template. These
# "templates" are a collection of settings that define a single cluster
# configuration and are used when creating and configuring a cluster. You can
# change which template to use when creating your cluster using the -c option
# to the start command:
#
#     $ starcluster start -c mediumcluster mycluster
#

[cluster smallcluster]
# change this to the name of one of the keypair sections defined above
KEYNAME = tcbook
# number of ec2 instances to launch
CLUSTER_SIZE = 2
# create the following user on the cluster
CLUSTER_USER = tom
# optionally specify shell (defaults to bash)
# (options: tcsh, zsh, csh, bash, ksh)
CLUSTER_SHELL = bash

# Replace with your node image id
NODE_IMAGE_ID=ami-axxxasdfa
NODE_INSTANCE_TYPE = c4.large

PLUGINS = tmux,boto

# comment following out if you don't want spot bid pricing. also, change to suitable bid price.
SPOT_BID = 0.35




############################################
## Configuring Security Group Permissions ##
############################################
# Sections starting with "permission" define security group rules to
# automatically apply to newly created clusters. IP_PROTOCOL in the following
# examples can be can be: tcp, udp, or icmp. CIDR_IP defaults to 0.0.0.0/0 or
# "open to the # world"

# open port 80 on the cluster to the world
[permission http]
IP_PROTOCOL = tcp
FROM_PORT = 80
TO_PORT = 80

[permission myrange]
from_port = 10187
to_port = 10187

######################
## Built-in Plugins ##
######################
# The following plugins ship with StarCluster and should work out-of-the-box.
# Uncomment as needed. Don't forget to update your PLUGINS list!
# See http://star.mit.edu/cluster/docs/latest/plugins for plugin details.


[plugin tmux]
# Use this plugin to create a cluster SSH "dashboard" using tmux. The plugin
# creates a tmux session on the master node that automatically connects to all
# the worker nodes over SSH. Attaching to the session shows a separate window
# for each node and each window is logged into the node via SSH.
SETUP_CLASS = starcluster.plugins.tmux.TmuxControlCenter
# The next time you start a cluster the TMUX plugin will automatically be executed. 
# at login:
# `$ tmux a`

[plugin boto]
setup_class = starcluster.plugins.boto.BotoPlugin
